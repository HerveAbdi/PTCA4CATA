% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/createSymDifmat.R
\name{createSymDist4PTCA}
\alias{createSymDist4PTCA}
\title{Create a matrix of
the symmetric difference distance / cross-products
for the 3rd dimension of a brick of non-negative numbers
(i.e., a brick of data for a BeTA or a CATA test).}
\usage{
createSymDist4PTCA(dataCube)
}
\arguments{
\item{dataCube}{an \eqn{I*J*K} brick of non-negative numbers
(i.e., a brick of data for a CATA test)}
}
\value{
return.list A list with
\code{Distance}:
a \eqn{K*K} (symmetric difference) distance  matrix
\code{CrossProduct}:
a \eqn{K*K} cross-product matrix obtained by double centering
the distance matrix
(the cross-product can be eigen-decomposed to give an MDS).
}
\description{
\code{createSymDist4PTCA}
creates a matrix of the
symmetric difference distance / cross-products
between a set of \eqn{K} matrices stored as
the 3rd dimension of an \eqn{I*J*K} brick of non-negative numbers
(i.e., a brick of data for a BeTA/CATA test).
The symmetric difference distance between two (0/1) matrices
\eqn{X} and \eqn{Y} is computed as
\eqn{sum(abs(X - Y))}.  The \eqn{K*K} distance matrix is
converted using double centering  into a cross-product matrix
that can be analyzed by
an eigen-decomposition to provide a STATIS-like
scalar-product/RV-map.
}
\details{
Note that the symmetric difference distance is meaningful
only between 0/1 matrices.
}
\examples{
\dontrun{
if(interactive()){
 # with aCubeOfCATAData being an I*J*K array
 DistanceMat <- createSymDist4PTCA(aCubeOfCATAData)
 }
}
}
\author{
Herve Abdi
}
