% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BlockProjections.R
\name{partialProj4CA}
\alias{partialProj4CA}
\title{Compute blocks (of columns or rows)
partial projections for a Correspondence Analysis.}
\usage{
partialProj4CA(resCA, code4Blocks, rowBlocks = FALSE)
}
\arguments{
\item{resCA}{the results of the (CA) analysis
from \code{epCA},
for example \code{reFromCA <- epCA(X)}.}

\item{code4Blocks}{a vector indicating
which columns (or rows) belong
to what block  (i.e.,
the of columns or rows of the same
block have the same level for
\code{code4Block}): Needs to be of length equal to the
number of variables (resp. rows) of the analysis.}

\item{rowBlocks}{= \code{FALSE} (default).
When \code{TRUE},
\code{partialProj4CA} runs the analysis
on blocks of rows instead of blocks of columns and
exchange the roles of the of columns and rows.}
}
\value{
a list with (1) \code{Fk}:
an \eqn{I*L*K} array of the partial projections
for the \code{L} factors (from \code{epCA})
of the \eqn{K} blocks, for the \eqn{I} rows
(if \code{rowBlock} is \code{FALSE} for the \eqn{J}
columns if
\code{rowBlock} is \code{TRUE});
 (2) \code{Ctrk} an \eqn{I*L} (resp. \eqn{J*L})
matrix of the "relative"
block contributions [for a given component
the relative contributions sum to 1];
(3) \code{absCtrk} an \eqn{I*L} (resp  \eqn{I*L})
 matrix of the "absolute"
block contributions [for a given component
the absolute contributions sum to the eigenvalue
for this component];
(4) \code{bk} a \eqn{K*}1 vector
storing the weights for the blocks,
(5) \code{resRV} a list with
(a) a matrix storing the \eqn{RV} coefficients
between the blocks and, if the package
\code{FactoMineR} is
installed, (b) the \eqn{p}-value for the
\eqn{RV}-coefficient
 (as
computed with \code{FactoMineR::coeffRV}).
}
\description{
\code{partialProj4CA} computes blocks
(of columns or rows)
partial projections for a Correspondence Analysis (CA).
Blocks are non-overlapping sets of of columns or rows
of a data table analyzed with
CA (as performed with
\code{epCA} from \code{ExPosition}).
\code{partialProj4CA} gives
the partial projection for the blocks.
These projections are barycentric
because the barycenters of the
partial projections are equal to the factor scores
for the whole table.
}
\details{
In CA, the (barycentric) partial projections
 are obtained by rewriting the
 CA "reconstitution" formula
 (see Escofier, 1980; Abdi & Béra, 2018).
}
\examples{
\dontrun{
# Get the data/CA function from Exposition
 library(ExPosition)
 data(authors, package = 'ExPosition')
 X <- (authors$ca$data) # the data
 zeBlocks <- as.factor(c(1,1,2,2,3,3)) # 3 blocks
 resCA <- epCA(X, graphs = FALSE) # CA of X
 resPart <- partialProj4CA(resCA, zeBlocks, rowBlocks = TRUE)
 # partial factor scores are in \code{resPart}
}
}
\references{
Escofier, B. (1980). Analyse factorielle
 de très grands tableaux
 par division en sous-tableaux.
 In Diday \emph{et al.}: \emph{Data Analysis and
 Informatics}. Amsterdam: North-Holland. pp 277-284.

 Abdi H., & Béra, M. (2018).
  Correspondence analysis.
   In R. Alhajj and J. Rokne (Eds.),
  \emph{Encyclopedia of Social Networks and Mining}
  (2nd Edition).
  New York: Springer Verlag.
}
\author{
Hervé Abdi
}
